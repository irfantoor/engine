<?php

namespace App\Middleware;

use App\Model\Users;
use IrfanTOOR\Engine\Middleware;
use IrfanTOOR\Engine\Response;
use IrfanTOOR\Engine\Session;

class AuthMiddleware extends Middleware
{
    protected $session;
    
    function __construct($controller)
    {
        parent::__construct($controller);
    }

    function process($request, $response, $args)
    {
        $this->session = new Session($request);
        
        $logged = $this->session->get('logged');

        $action = $args[1] ?: null;        
        $auth_actions = '|login|logout|forgot|register|';

        if ($logged) {
            if ($action === 'logout') {
                return $this->$action($request, $response, $args);
            }

            $this->engine->register('menu', function(){
                require APP . 'views/auth/menu.php';
            });

            return $response;
        } else {
            if ($action && strpos($auth_actions, '|' . $action . '|') !== false) {
                return $this->$action($request, $response, $args);
            }
            $this->redirectTo('/admin/login');
        }
    }

    public function register($request, $response, $args)
    {
        $data = $this->config('data');
        $data['engine'] = $this->controller->engine();
        $post = $request->getParsedBody();
        $name = $post['name'] ?: null;
        $email = $post['email'] ?: null;
        $password = $post['password'] ?: null;

        if ($name) {
            $users = new Users;
            $user = [
                'name'     => $name,
                'email'    => $email,
                'password' => md5($password),
                'token'    => md5($email . $password . mktime()),
            ];

            if ( $users->register($user)) {
                $data['status'] = 'success';
                $data['message'] = 'Your account has been created! an email
                has been sent to your email, kindly activate your account by
                clcking on the link sent to you';
            } else {
                $data['status'] = 'danger';
                $data['message'] = 'Error processing the request, try later';
            }
        }

        $this->show($response, 'auth/register', $data);
    }

    public function login($request, $response, $args)
    {
        $session = $this->session;
        
        if ($session->get('logged'))
            $this->redirectTo('/admin');

        $data = $this->config('data');
        $data['engine'] = $this->controller->engine();

        $post = $request->getParsedBody();
        $email    = $post['email'] ?: null;
        $password = $post['password'] ?: null;

        if ($email) {
            $users = new Users;

            if ($users->authenticate($email, $password)) {
                $session->set('logged', 1);
                $session->save();
                $this->redirectTo('/admin', 200);
            } else {
                $data['status'] = 'danger';
                $data['message'] = 'Wrong credentials';
            }
        }

        $this->show($response, 'auth/login', $data);
    }

    public function logout($request, $response, $args)
    {
        $session = $this->session();
        $session->remove('logged');

        $this->redirectTo('/');
    }

    public function forgot($request, $response, $args)
    {
        $data = $this->config('data');
        $data['engine'] = $this->controller->engine();

        $this->show($response, 'auth/forgot', $data);
    }

    private function show($response, $view, $data)
    {
        $response = $this->controller->show($response, $view, $data);
        $response->send();
    }
}
